:ruby
  def initialize(**)
    @b = {}
    @o = {}
    @i = {}
  end

  def mount
    loop do
      GC.stat(@b)
      ObjectSpace.count_objects(@o)
      count_internals(@i)
      rerender!
      sleep 1
    end
  end

  INTERNALS = [
    S::Root, S::Signal, S::Computed, S::Effect,
    VDOM::Component::Base, VDOM::Nodes::Base,
    Async::Task,
  ]

  def count_internals(h = {})
    INTERNALS.each do |klass|
      h[klass.name] = ObjectSpace.each_object(klass).count
    end
  end

%div
  %button{onclick: ->{ GC.start }} Run GC
  %dl
    = @b.map do |k, v|
      .entry[k]
        %dt= k
        %dd= v
  %dl
    = @o.map do |k, v|
      .entry[k]
        %dt= k
        %dd= v
  %dl
    = @i.map do |k, v|
      .entry[k]
        %dt= k
        %dd= v

:css
  dl {
    columns: 16em auto;
    font-family: monospace;
  }

  .entry {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
  }

  dt {
    font-weight: bold;
  }
  dl {
    text-align: right;
  }
