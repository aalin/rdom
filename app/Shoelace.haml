:ruby
  def handle_submit(**submitted) =
    p(submitted:)
%div
  %sl-split-panel(position=50){style: { __divider_width: 20.px }}
    %sl-icon(slot="divider" name="grip-vertical")
    %sl-card(slot="start")
      %form{onsubmit: method(:handle_submit)}
        %sl-input(autocomplete="off" help_text="What would you like people to call you?" label="Name" name="name" required="")
        %sl-select(clearable="" help_text="Select the best option." label="Favorite Animal" name="animal" required="")
          %sl-option(value="birds") Birds
          %sl-option(value="cats") Cats
          %sl-option(value="dogs") Dogs
          %sl-option(value="other") Other
        %sl-checkbox(required="" value="accept") Accept terms and conditions
        %sl-button-group
          %sl-button(type="submit" variant="primary") Submit
          %sl-button(type="reset" variant="default") Reset
    %sl-card(slot="end")
      %sl-tab-group
        %sl-tab(slot="nav" panel="general") General
        %sl-tab(slot="nav" panel="custom") Custom
        %sl-tab(slot="nav" panel="advanced") Advanced
        %sl-tab(slot="nav" panel="disabled" disabled=true) Disabled
        %sl-tab-panel(name="general") This is the general tab panel.
        %sl-tab-panel(name="custom") This is the custom tab panel.
        %sl-tab-panel(name="advanced")
          %sl-button-group
            %sl-button button
            %sl-button(variant="neutral" outline) Neutral
          %div
            %sl-rating(label="Rating")
          %div
            %sl-switch Switch
        %sl-tab-panel(name="disabled") This is a disabled tab panel.
:css
  sl-input,
  sl-select,
  sl-checkbox {
    display: block;
    margin-bottom: var(--sl-spacing-medium);
  }

  /* user invalid styles */
  sl-input[data-user-invalid]::part(base),
  sl-select[data-user-invalid]::part(combobox),
  sl-checkbox[data-user-invalid]::part(control) {
    border-color: var(--sl-color-danger-600);
  }

  [data-user-invalid]::part(form-control-label),
  [data-user-invalid]::part(form-control-help-text),
  sl-checkbox[data-user-invalid]::part(label) {
    color: var(--sl-color-danger-700);
  }

  sl-checkbox[data-user-invalid]::part(control) {
    outline: none;
  }

  sl-input:focus-within[data-user-invalid]::part(base),
  sl-select:focus-within[data-user-invalid]::part(combobox),
  sl-checkbox:focus-within[data-user-invalid]::part(control) {
    border-color: var(--sl-color-danger-600);
    box-shadow: 0 0 0 var(--sl-focus-ring-width) var(--sl-color-danger-300);
  }

  /* User valid styles */
  sl-input[data-user-valid]::part(base),
  sl-select[data-user-valid]::part(combobox),
  sl-checkbox[data-user-valid]::part(control) {
    border-color: var(--sl-color-success-600);
  }

  [data-user-valid]::part(form-control-label),
  [data-user-valid]::part(form-control-help-text),
  sl-checkbox[data-user-valid]::part(label) {
    color: var(--sl-color-success-700);
  }

  sl-checkbox[data-user-valid]::part(control) {
    background-color: var(--sl-color-success-600);
    outline: none;
  }

  sl-input:focus-within[data-user-valid]::part(base),
  sl-select:focus-within[data-user-valid]::part(combobox),
  sl-checkbox:focus-within[data-user-valid]::part(control) {
    border-color: var(--sl-color-success-600);
    box-shadow: 0 0 0 var(--sl-focus-ring-width) var(--sl-color-success-300);
  }

  sl-card::part(base) {
    margin: 1em;
  }
